<!DOCTYPE html>
<html lang="en">
<head>
<!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

<!-- Bootstrap CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">

<title>Road to 0K</title>
<link rel="shortcut icon" type="image/x-icon" href="http://www.dota2.com/images/favicon.ico"/>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Unica+One"/>
<link rel="stylesheet" href="colors.css"/>
<style>
	body {
		overflow-y: scroll;
		overflow-x: hidden;
		font-family: 'Unica One';
	}
	.col { font-weight: bold; }
</style>
</head>
<body class="c-b-dark-gray c-white">
<header class="mb-3 c-b-dark-gray-2">
	<div class="container" style="">
		<div class="row">
			<div class="col"><a id="dotabuff"></a></div>
			<div class="col">Games<h2 class="col c-gold" id="games"></h2></div>
			<div class="col">Win Rate<h2 class="col c-gold" id="winRate"></h2></div>
			<div class="col">MMR<h2 class="col c-blue" id="curMMR"></h2></div>
			<div class="col">Min<h2 class="col c-red" id="minMMR"></h2></div>
			<div class="col">Max<h2 class="col c-green" id="maxMMR"></h2></div>
			<div class="col">Streaks<h2 class="col c-gold"><span class="c-red mr-2" id="maxLoseStreak"></span>vs<span class="c-green ml-2" id="maxWinStreak"></span></h2></div>
		</div>
	</div>
</header>

<div id="chart1"></div>
<div id="chart2"></div>
<div id="chart3"></div>
	
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="mmr.js"></script>
<script>
	$(function() {
		var dailyMMR       = []
		var dailyMMRRange  = []
		var dailyMMRWins   = []
		var dailyMMRLosses = []
		var dailyMMRResult = []
		var MMRWinSum      = []
		var MMRLossSum     = []
		var MMRSumResult   = []
		var curMMR         = 0
		var minMMR         = 10000
		var maxMMR         = 0
		var mmrGames       = 0

		var winSum = 0, lossSum = 0
		var curDate = START_DATE, minDate
		var currWinStreak = 0, currLoseStreak = 0, maxWinStreak = 0, maxLoseStreak = 0
		for (var i = 0; i < MMR.length; i++) {
			var day = MMR[i]
			var win = 0, loss = 0
			var dayMin = curMMR, dayMax = curMMR
			if (day.length > 0) dayMin = dayMax = day[0]

			for (var j = 0; j < day.length; j++) {
				var diff = day[j] - curMMR;
				(diff > 0) ? win++ : loss++
				
				if (currLoseStreak != 0) {
					if (diff < 0) currLoseStreak++
					else {
						currLoseStreak = 0
						currWinStreak = 1
					}
					if (maxLoseStreak < currLoseStreak) maxLoseStreak = currLoseStreak
				}
				else {
					if (diff > 0) currWinStreak++
					else {
						currWinStreak = 0
						currLoseStreak = 1
					}
					if (maxWinStreak < currWinStreak) maxWinStreak = currWinStreak
				}
				
				curMMR = day[j]
				if (curMMR > dayMax) dayMax = curMMR
				if (curMMR < dayMin) dayMin = curMMR
				if (curMMR > maxMMR) maxMMR = curMMR
				if (curMMR < minMMR) { minMMR = curMMR; minDate = curDate.getTime() }
			}

			var t = curDate.getTime()
			curDate.setDate(curDate.getDate() + 1)

			dailyMMR[i]       = [t, curMMR]
			dailyMMRRange[i]  = [t, dayMin, dayMax]
			dailyMMRWins[i]   = [t, win]
			dailyMMRLosses[i] = [t, loss * -1]
			dailyMMRResult[i] = [t, win - loss]
			mmrGames         += day.length
			winSum           += win
			lossSum          += loss
			MMRWinSum[i]      = [t, winSum]
			MMRLossSum[i]     = [t, -lossSum]
			MMRSumResult[i]   = [t, winSum - lossSum]
		}
		$("#dotabuff").attr("href", PROFILE)
			.append($("<img/>").attr("src", AVATAR).addClass("rounded-circle").css("height", "64px"))
		//var minMMR = Math.min.apply(null, MMR);
		//var maxMMR = Math.max(...MMR);
		//var avgMMR = Math.round(MMR.reduce(function(p,c,i){return p+(c-p)/(i+1)}, 0));
		$("#minMMR").text(minMMR)
		$("#curMMR").text(curMMR)
		$("#maxMMR").text(maxMMR)
		$("#games").text(mmrGames)
		$("#winRate").text(Math.round(100 * (winSum / mmrGames)) + "%")
		$('#maxLoseStreak').text("-"+maxLoseStreak)
		$('#maxWinStreak').text("+"+maxWinStreak)

		function gcolor(cssClass) {
			var dummy = $('<div/>').addClass(cssClass).appendTo("body")
			var color = $(dummy).css('color')
			$(dummy).remove()
			return color
		}
		// Colors
		var cBack = gcolor('c-dark-gray')
		var cBase = gcolor('c-white')
		var cDisabled = gcolor('c-light-gray-2')
		var cLines = gcolor('c-light-gray-2')
		var cMMR = gcolor('c-blue')
		var cMMRRange = cPlot = gcolor('c-light-blue')
		var cWon = gcolor('c-green')
		var cLost = gcolor('c-red')
		var cNet = gcolor('c-gold')

		Highcharts.setOptions({
			lang: { decimalPoint: '.', thousandsSep: ',' },
			chart: {
				style: { fontFamily: '\'Unica One\'' },
				backgroundColor: cBack,
				type: 'areaspline',
			},
			//title: { style: { color: cBase, fontSize: '20px', textTransform: 'uppercase' } },
			xAxis: {
				lineColor: cLines,
				tickColor: cLines,
				labels: { formatter: function() { return /*'Day '+ Highcharts.numberFormat(this.value, 0)*/ ''; } },
				type: 'datetime'
			},
			yAxis: {
				title: { text: '' },
				gridLineColor: cLines,
				lineColor: cLines,
				tickColor: cLines,
				labels: {
					style: { color: cBase, fontSize: '20px' },
					formatter: function() { return Highcharts.numberFormat(this.value, 0); }
				},
			},
			tooltip: {
				backgroundColor: 'rgba(17, 17, 17, 0.85)',
				style: { color: cBase, fontSize: '20px' },
				shared: true,
				//valuePrefix: '$',
				headerFormat: '<b>{point.key}</b><br>',
			},
			plotOptions: {
				series: { marker: { enabled: false } },
				areaspline: { fillOpacity: 0.5 }
			},
			legend: {
				itemStyle: { color: cBase, fontSize: '20px' },
				itemHoverStyle: { color: cBase },
				itemHiddenStyle: { color: cDisabled },
			},
			credits: { enabled: false },
		})

		// Plot Lines
		function plot(date, color, text) {
			return {
				value: date,
				color: color,
				width: 2,
				//zIndex: 4,
				dashStyle: "shortdash",
				label: {
					text: text,
					align: "left",
					rotation: 90,
					style: {
						fontSize: "20px",
						color: color
					}
				}
			}
		}
		var plotLines = [ plot(minDate, cLost, "Lowest") ]
		for (var i = 0; i < PLOTLINES.length; i++)
			plotLines.push( plot(PLOTLINES[i][0], cPlot, PLOTLINES[i][1]) )
		

		// Charts
		new Highcharts.Chart({
			chart: { renderTo: 'chart1' },
			title: { text: '' },
			xAxis: { plotLines: plotLines },
			yAxis: { min: minMMR },
			series: [{
				name: "Solo MMR",
				color: cMMR,
				zIndex: 0,
				data: dailyMMR,
			},{
				//linkedTo: ':previous',
				name: 'Range',
				color: cMMRRange,
				fillOpacity: 0.6,
				type: 'areasplinerange',
				lineWidth: 0,
				zIndex: 1,
				data: dailyMMRRange,
		}]})
		new Highcharts.Chart({
			chart: { renderTo: 'chart2' },
			title: { text: '' },
			series: [{
				name: "Won",
				color: cWon,
				data: dailyMMRWins,
			},{
				name: "Lost",
				color: cLost,
				data: dailyMMRLosses,
			},{
				name: "Net",
				color: cNet,
				type: 'spline',
				data: dailyMMRResult,
		}]})
		new Highcharts.Chart({
			chart: { renderTo: 'chart3' },
			title: { text: '' },
			series: [{
				name: "Won",
				color: cWon,
				data: MMRWinSum,
			},{
				name: "Lost",
				color: cLost,
				data: MMRLossSum,
			},{
				name: "Net",
				color: cNet,
				type: 'spline',
				data: MMRSumResult,
		}]})
	})
</script>
</body>
</html>